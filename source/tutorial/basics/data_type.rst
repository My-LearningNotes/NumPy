NumPy 数据类型
==============

NumPy支持的数据类型比Python内置的类型要多很多, 基本上可以和C语言的数据类型对应上, 其中部分类型对应Python的内置类型.

.. table:: 常用NumPy基本类型

    ============== ================================================================================
    ``bool_``      布尔类型数据(True或者False)
    ``int_``       默认的整数类型(类似于C语言中的long, int32或者int64
    ``intc``       与C的int类型一样, 一般是int32或int64
    ``intp``       用于索引的整数类型(类似于C的ssize_t, 一般情况下仍然是int32或int64
    ``int8``       字节(-128 - 127)
    ``int16``      整数(-32768 - 32767)
    ``int32``      整数(-2147483648 to 2147483647)
    ``int64``      整数(-9223372036854775808 to 9223372036854775807)
    ``uint8``      无符号整数(0 - 255)
    ``uint16``     无符号整数(0 - 65535)
    ``uint32``     无符号整数(0 - 4294967295)
    ``uint64``     无符号整数(0 - 18446744073709551615)
    ``float_``     float64类型的简写
    ``float16``    半精度浮点数, 包括: 1 个符号位, 5 个指数位, 10 个尾数位
    ``float32``    单精度浮点数, 包括: 1 个符号位, 8 个指数位, 23 个尾数位
    ``float64``    双精度浮点数, 包括: 1 个符号位, 11 个指数位, 52 个尾数位
    ``complex_``   complex128 类型的简写, 即 128 位复数
    ``complex64``  复数, 表示双32位浮点数(实数部分和虚数部分)
    ``complex128`` 复数, 表示双64位浮点数(实数部分和虚数部分)
    ============== ================================================================================


数据类型对象(``dtype``)
-----------------------

数据类型对象是用来描述与数组对应的内存区域如何使用, 这依赖如下几个方面:

    * 数据的类型(整数, 浮点数, 或者Python对象)
    * 数据的大小(例如, 整数使用多少个字节来存储)
    * 数据的字节顺序(Little Endian or Big Endian)
    * 在结构化类型的情况下, 字段的名称, 每个字段的数据类型和每个字段所取的内存块的部分
    * 如果数据类型是子数组, 它的形状和数据类型

.. note::

    时局类型对象\ ``dtype``\ 用来描述数组元素的内存模型.

